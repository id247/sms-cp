/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$how-1-name: 'how-1';
$how-1-x: 549px;
$how-1-y: 0px;
$how-1-offset-x: -549px;
$how-1-offset-y: 0px;
$how-1-width: 140px;
$how-1-height: 140px;
$how-1-total-width: 895px;
$how-1-total-height: 1048px;
$how-1-image: '../images/sprite.png';
$how-1: (549px, 0px, -549px, 0px, 140px, 140px, 895px, 1048px, '../images/sprite.png', 'how-1', );
$how-2-name: 'how-2';
$how-2-x: 549px;
$how-2-y: 560px;
$how-2-offset-x: -549px;
$how-2-offset-y: -560px;
$how-2-width: 140px;
$how-2-height: 140px;
$how-2-total-width: 895px;
$how-2-total-height: 1048px;
$how-2-image: '../images/sprite.png';
$how-2: (549px, 560px, -549px, -560px, 140px, 140px, 895px, 1048px, '../images/sprite.png', 'how-2', );
$how-3-name: 'how-3';
$how-3-x: 549px;
$how-3-y: 140px;
$how-3-offset-x: -549px;
$how-3-offset-y: -140px;
$how-3-width: 140px;
$how-3-height: 140px;
$how-3-total-width: 895px;
$how-3-total-height: 1048px;
$how-3-image: '../images/sprite.png';
$how-3: (549px, 140px, -549px, -140px, 140px, 140px, 895px, 1048px, '../images/sprite.png', 'how-3', );
$how-4-name: 'how-4';
$how-4-x: 549px;
$how-4-y: 280px;
$how-4-offset-x: -549px;
$how-4-offset-y: -280px;
$how-4-width: 140px;
$how-4-height: 140px;
$how-4-total-width: 895px;
$how-4-total-height: 1048px;
$how-4-image: '../images/sprite.png';
$how-4: (549px, 280px, -549px, -280px, 140px, 140px, 895px, 1048px, '../images/sprite.png', 'how-4', );
$how-5-name: 'how-5';
$how-5-x: 549px;
$how-5-y: 420px;
$how-5-offset-x: -549px;
$how-5-offset-y: -420px;
$how-5-width: 140px;
$how-5-height: 140px;
$how-5-total-width: 895px;
$how-5-total-height: 1048px;
$how-5-image: '../images/sprite.png';
$how-5: (549px, 420px, -549px, -420px, 140px, 140px, 895px, 1048px, '../images/sprite.png', 'how-5', );
$logotype-color-name: 'logotype-color';
$logotype-color-x: 689px;
$logotype-color-y: 139px;
$logotype-color-offset-x: -689px;
$logotype-color-offset-y: -139px;
$logotype-color-width: 106px;
$logotype-color-height: 37px;
$logotype-color-total-width: 895px;
$logotype-color-total-height: 1048px;
$logotype-color-image: '../images/sprite.png';
$logotype-color: (689px, 139px, -689px, -139px, 106px, 37px, 895px, 1048px, '../images/sprite.png', 'logotype-color', );
$logotype-name: 'logotype';
$logotype-x: 689px;
$logotype-y: 102px;
$logotype-offset-x: -689px;
$logotype-offset-y: -102px;
$logotype-width: 106px;
$logotype-height: 37px;
$logotype-total-width: 895px;
$logotype-total-height: 1048px;
$logotype-image: '../images/sprite.png';
$logotype: (689px, 102px, -689px, -102px, 106px, 37px, 895px, 1048px, '../images/sprite.png', 'logotype', );
$phone-2-name: 'phone-2';
$phone-2-x: 0px;
$phone-2-y: 0px;
$phone-2-offset-x: 0px;
$phone-2-offset-y: 0px;
$phone-2-width: 549px;
$phone-2-height: 522px;
$phone-2-total-width: 895px;
$phone-2-total-height: 1048px;
$phone-2-image: '../images/sprite.png';
$phone-2: (0px, 0px, 0px, 0px, 549px, 522px, 895px, 1048px, '../images/sprite.png', 'phone-2', );
$phone-name: 'phone';
$phone-x: 0px;
$phone-y: 522px;
$phone-offset-x: 0px;
$phone-offset-y: -522px;
$phone-width: 494px;
$phone-height: 526px;
$phone-total-width: 895px;
$phone-total-height: 1048px;
$phone-image: '../images/sprite.png';
$phone: (0px, 522px, 0px, -522px, 494px, 526px, 895px, 1048px, '../images/sprite.png', 'phone', );
$sp-color-name: 'sp-color';
$sp-color-x: 689px;
$sp-color-y: 51px;
$sp-color-offset-x: -689px;
$sp-color-offset-y: -51px;
$sp-color-width: 206px;
$sp-color-height: 51px;
$sp-color-total-width: 895px;
$sp-color-total-height: 1048px;
$sp-color-image: '../images/sprite.png';
$sp-color: (689px, 51px, -689px, -51px, 206px, 51px, 895px, 1048px, '../images/sprite.png', 'sp-color', );
$sp-name: 'sp';
$sp-x: 689px;
$sp-y: 0px;
$sp-offset-x: -689px;
$sp-offset-y: 0px;
$sp-width: 206px;
$sp-height: 51px;
$sp-total-width: 895px;
$sp-total-height: 1048px;
$sp-image: '../images/sprite.png';
$sp: (689px, 0px, -689px, 0px, 206px, 51px, 895px, 1048px, '../images/sprite.png', 'sp', );
$spritesheet-width: 895px;
$spritesheet-height: 1048px;
$spritesheet-image: '../images/sprite.png';
$spritesheet-sprites: ($how-1, $how-2, $how-3, $how-4, $how-5, $logotype-color, $logotype, $phone-2, $phone, $sp-color, $sp, );
$spritesheet: (895px, 1048px, '../images/sprite.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
